<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.p2p.dao.BorrowAuditRecordMapper" >
  <resultMap id="BaseResultMap" type="com.p2p.entity.BorrowAuditRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="borrow_id" property="borrowId" jdbcType="INTEGER" />
    <result column="audit_type" property="auditType" jdbcType="INTEGER" />
    <result column="audit_status" property="auditStatus" jdbcType="INTEGER" />
    <result column="audit_comment" property="auditComment" jdbcType="VARCHAR" />
    <result column="audit_user_id" property="auditUserId" jdbcType="INTEGER" />
    <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, borrow_id, audit_type, audit_status, audit_comment, audit_user_id, audit_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_borrow_audit_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_borrow_audit_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.p2p.entity.BorrowAuditRecord" >
    insert into t_borrow_audit_record (id, borrow_id, audit_type, 
      audit_status, audit_comment, audit_user_id, 
      audit_time)
    values (#{id,jdbcType=INTEGER}, #{borrowId,jdbcType=INTEGER}, #{auditType,jdbcType=INTEGER},
      #{auditStatus,jdbcType=INTEGER}, #{auditComment,jdbcType=VARCHAR}, #{auditUserId,jdbcType=INTEGER},
      #{auditTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.p2p.entity.BorrowAuditRecord" >
    insert into t_borrow_audit_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="auditType != null" >
        audit_type,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="auditComment != null" >
        audit_comment,
      </if>
      <if test="auditUserId != null" >
        audit_user_id,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="borrowId != null" >
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="auditType != null" >
        #{auditType,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditComment != null" >
        #{auditComment,jdbcType=VARCHAR},
      </if>
      <if test="auditUserId != null" >
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.p2p.entity.BorrowAuditRecord" >
    update t_borrow_audit_record
    <set >
      <if test="borrowId != null" >
        borrow_id = #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="auditType != null" >
        audit_type = #{auditType,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditComment != null" >
        audit_comment = #{auditComment,jdbcType=VARCHAR},
      </if>
      <if test="auditUserId != null" >
        audit_user_id = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.p2p.entity.BorrowAuditRecord" >
    update t_borrow_audit_record
    set borrow_id = #{borrowId,jdbcType=INTEGER},
      audit_type = #{auditType,jdbcType=INTEGER},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      audit_comment = #{auditComment,jdbcType=VARCHAR},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>